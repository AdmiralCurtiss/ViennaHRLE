@PACKAGE_INIT@

option(OMP_PARALLELIZE "Use OpenMP to parallelize computations." ON)

###############################################
#  compiler dependent settings for OpenMP
###############################################
if ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang")
  if(OMP_PARALLELIZE)
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fopenmp=libomp")
  endif()
#    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}  -Werror -ferror-limit=2")
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wextra")
elseif ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
#    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}  -Werror -fmax-errors=2")
  if(OMP_PARALLELIZE)
    FIND_PACKAGE(OpenMP REQUIRED)
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall ${OpenMP_CXX_FLAGS}")
  endif()
elseif ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Intel")
  if(OMP_PARALLELIZE)
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -qopenmp")
  endif()
#    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}  -fmax-errors=2")
elseif ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "MSVC")
  if(OMP_PARALLELIZE)
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /openmp")
  endif()
endif()

# set different include path for local builds
if(NOT ViennaHRLE_COMMON_TARGET)
  include("${CMAKE_CURRENT_LIST_DIR}/@PROJECT_NAME@Targets.cmake")
endif()

SET(VIENNAHRLE_INCLUDE_DIRS "@CMAKE_INSTALL_PREFIX@@CMAKE_INSTALL_INCLUDEDIR@")

check_required_components("@PROJECT_NAME@")
